import numpy as np
import pandas as pd
import sklearn

dataset= pd.read_csv('/content/Social_Network_Ads (1).csv')
dataset.shape
dataset.isnull().sum()
 #if there was NAN(Missing Values) we would use dataset.dropna(inplace=True) that would removes rows with at least one missing value.
dataset.head()
#Label Encoding
from sklearn import preprocessing
                                          #In this part we have turned male female strings to 0,1 in the gender coloumn

col_cat=['Gender']
le=preprocessing.LabelEncoder()

for c in col_cat:
  dataset[c]=le.fit_transform(dataset[c])
#Splitting (Here we split data into target and features )


#Feartures in x
x=dataset.iloc[:,1:4].values
y=dataset.iloc[:,-1].values
x.shape
y.shape


#Model train and split

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)
x_train.shape 
y_train.shape 
y_test.shape 
x_test.shape 
dataset.head() 



#Feature Scaling ,Here we will use standardization

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.transform(x_test)

x_train[1:4]





#model creation 
from sklearn.naive_bayes import GaussianNB 
classifier=GaussianNB() 
classifier.fit(x_train,y_train) 
y_pred=classifier.predict(x_test) 
y_pred,y_test 



#Evaluation Metrics
from sklearn.metrics import confusion_matrix,accuracy_score,f1_score,recall_score,precision_score
cm=confusion_matrix(y_test,y_pred)
print(cm)
acc=accuracy_score(y_test,y_pred)
print(f"Accurancy:{acc}")
f1=f1_score(y_test,y_pred)
print(f"F1 score:{f1}")
recall=recall_score(y_test,y_pred)
print(f"Recall score:{recall}")
precision = precision_score(y_test,y_pred)
print(f"Precision score:{precision}")







